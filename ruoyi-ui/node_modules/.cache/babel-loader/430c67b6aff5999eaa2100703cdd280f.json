{"remainingRequest":"E:\\workSpace\\RuoYi-Vue\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\workSpace\\RuoYi-Vue\\ruoyi-ui\\node_modules\\quill\\core\\selection.js","dependencies":[{"path":"E:\\workSpace\\RuoYi-Vue\\ruoyi-ui\\node_modules\\quill\\core\\selection.js","mtime":1734253479720},{"path":"E:\\workSpace\\RuoYi-Vue\\ruoyi-ui\\babel.config.js","mtime":1734161096606},{"path":"E:\\workSpace\\RuoYi-Vue\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734253476057},{"path":"E:\\workSpace\\RuoYi-Vue\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1734253476301}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_parchment","require","_lodashEs","_emitter","_interopRequireDefault","_logger","debug","logger","Range","exports","_createClass2","default","index","_classCallCheck2","length","arguments","undefined","Selection","scroll","emitter","_this","composing","mouseDown","root","domNode","cursor","create","savedRange","lastRange","lastNative","handleComposition","handleDragging","listenDOM","document","setTimeout","update","bind","Emitter","sources","USER","on","events","SCROLL_BEFORE_UPDATE","hasFocus","native","getNativeRange","start","node","textNode","once","SCROLL_UPDATE","source","mutations","contains","end","setNativeRange","offset","triggeredByTyping","some","mutation","type","target","SILENT","ignored","SCROLL_OPTIMIZE","context","range","_context$range","startNode","startOffset","endNode","endOffset","key","value","_this2","COMPOSITION_BEFORE_START","COMPOSITION_END","parent","restore","_this3","body","focus","preventScroll","setRange","format","nativeRange","collapsed","query","Scope","BLOCK","blot","find","LeafBlot","after","split","insertBefore","attach","optimize","data","getBounds","scrollLength","Math","min","_this$scroll$leaf","leaf","_this$scroll$leaf2","_slicedToArray2","_this$scroll$leaf3","_this$scroll$leaf4","next","_this$scroll$line","line","_this$scroll$line2","_this$scroll$line3","_this$scroll$line4","nextLine","_leaf$position","position","_leaf$position2","createRange","setStart","_this$scroll$leaf5","_this$scroll$leaf6","_leaf$position3","_leaf$position4","setEnd","getBoundingClientRect","side","rect","Text","Element","bottom","top","height","left","right","width","selection","getSelection","rangeCount","getRangeAt","normalizeNative","info","getRange","isConnected","normalized","normalizedToRange","activeElement","_this4","positions","push","indexes","map","_position","max","apply","_toConsumableArray2","concat","startContainer","endContainer","forEach","childNodes","lastChild","rangeToNative","_this5","getPosition","inclusive","_this5$scroll$leaf","_this5$scroll$leaf2","leafOffset","force","parentNode","_ref","tagName","Array","from","indexOf","removeAllRanges","addRange","blur","API","args","oldRange","_this$getRange","_this$getRange2","isEqual","_this$emitter","SELECTION_CHANGE","cloneDeep","emit","EDITOR_CHANGE","_this$emitter2","descendant","e","_default"],"sources":["../../src/core/selection.ts"],"sourcesContent":["import { LeafBlot, Scope } from 'parchment';\nimport { cloneDeep, isEqual } from 'lodash-es';\nimport Emitter from './emitter.js';\nimport type { EmitterSource } from './emitter.js';\nimport logger from './logger.js';\nimport type Cursor from '../blots/cursor.js';\nimport type Scroll from '../blots/scroll.js';\n\nconst debug = logger('quill:selection');\n\ntype NativeRange = AbstractRange;\n\ninterface NormalizedRange {\n  start: {\n    node: NativeRange['startContainer'];\n    offset: NativeRange['startOffset'];\n  };\n  end: { node: NativeRange['endContainer']; offset: NativeRange['endOffset'] };\n  native: NativeRange;\n}\n\nexport interface Bounds {\n  bottom: number;\n  height: number;\n  left: number;\n  right: number;\n  top: number;\n  width: number;\n}\n\nexport class Range {\n  constructor(\n    public index: number,\n    public length = 0,\n  ) {}\n}\n\nclass Selection {\n  scroll: Scroll;\n  emitter: Emitter;\n  composing: boolean;\n  mouseDown: boolean;\n\n  root: HTMLElement;\n  cursor: Cursor;\n  savedRange: Range;\n  lastRange: Range | null;\n  lastNative: NormalizedRange | null;\n\n  constructor(scroll: Scroll, emitter: Emitter) {\n    this.emitter = emitter;\n    this.scroll = scroll;\n    this.composing = false;\n    this.mouseDown = false;\n    this.root = this.scroll.domNode;\n    // @ts-expect-error\n    this.cursor = this.scroll.create('cursor', this);\n    // savedRange is last non-null range\n    this.savedRange = new Range(0, 0);\n    this.lastRange = this.savedRange;\n    this.lastNative = null;\n    this.handleComposition();\n    this.handleDragging();\n    this.emitter.listenDOM('selectionchange', document, () => {\n      if (!this.mouseDown && !this.composing) {\n        setTimeout(this.update.bind(this, Emitter.sources.USER), 1);\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_BEFORE_UPDATE, () => {\n      if (!this.hasFocus()) return;\n      const native = this.getNativeRange();\n      if (native == null) return;\n      if (native.start.node === this.cursor.textNode) return; // cursor.restore() will handle\n      this.emitter.once(\n        Emitter.events.SCROLL_UPDATE,\n        (source, mutations: MutationRecord[]) => {\n          try {\n            if (\n              this.root.contains(native.start.node) &&\n              this.root.contains(native.end.node)\n            ) {\n              this.setNativeRange(\n                native.start.node,\n                native.start.offset,\n                native.end.node,\n                native.end.offset,\n              );\n            }\n            const triggeredByTyping = mutations.some(\n              (mutation) =>\n                mutation.type === 'characterData' ||\n                mutation.type === 'childList' ||\n                (mutation.type === 'attributes' &&\n                  mutation.target === this.root),\n            );\n            this.update(triggeredByTyping ? Emitter.sources.SILENT : source);\n          } catch (ignored) {\n            // ignore\n          }\n        },\n      );\n    });\n    this.emitter.on(Emitter.events.SCROLL_OPTIMIZE, (mutations, context) => {\n      if (context.range) {\n        const { startNode, startOffset, endNode, endOffset } = context.range;\n        this.setNativeRange(startNode, startOffset, endNode, endOffset);\n        this.update(Emitter.sources.SILENT);\n      }\n    });\n    this.update(Emitter.sources.SILENT);\n  }\n\n  handleComposition() {\n    this.emitter.on(Emitter.events.COMPOSITION_BEFORE_START, () => {\n      this.composing = true;\n    });\n    this.emitter.on(Emitter.events.COMPOSITION_END, () => {\n      this.composing = false;\n      if (this.cursor.parent) {\n        const range = this.cursor.restore();\n        if (!range) return;\n        setTimeout(() => {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }, 1);\n      }\n    });\n  }\n\n  handleDragging() {\n    this.emitter.listenDOM('mousedown', document.body, () => {\n      this.mouseDown = true;\n    });\n    this.emitter.listenDOM('mouseup', document.body, () => {\n      this.mouseDown = false;\n      this.update(Emitter.sources.USER);\n    });\n  }\n\n  focus() {\n    if (this.hasFocus()) return;\n    this.root.focus({ preventScroll: true });\n    this.setRange(this.savedRange);\n  }\n\n  format(format: string, value: unknown) {\n    this.scroll.update();\n    const nativeRange = this.getNativeRange();\n    if (\n      nativeRange == null ||\n      !nativeRange.native.collapsed ||\n      this.scroll.query(format, Scope.BLOCK)\n    )\n      return;\n    if (nativeRange.start.node !== this.cursor.textNode) {\n      const blot = this.scroll.find(nativeRange.start.node, false);\n      if (blot == null) return;\n      // TODO Give blot ability to not split\n      if (blot instanceof LeafBlot) {\n        const after = blot.split(nativeRange.start.offset);\n        blot.parent.insertBefore(this.cursor, after);\n      } else {\n        // @ts-expect-error TODO: nativeRange.start.node doesn't seem to match function signature\n        blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen\n      }\n      this.cursor.attach();\n    }\n    this.cursor.format(format, value);\n    this.scroll.optimize();\n    this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);\n    this.update();\n  }\n\n  getBounds(index: number, length = 0) {\n    const scrollLength = this.scroll.length();\n    index = Math.min(index, scrollLength - 1);\n    length = Math.min(index + length, scrollLength - 1) - index;\n    let node: Node;\n    let [leaf, offset] = this.scroll.leaf(index);\n    if (leaf == null) return null;\n    if (length > 0 && offset === leaf.length()) {\n      const [next] = this.scroll.leaf(index + 1);\n      if (next) {\n        const [line] = this.scroll.line(index);\n        const [nextLine] = this.scroll.line(index + 1);\n        if (line === nextLine) {\n          leaf = next;\n          offset = 0;\n        }\n      }\n    }\n    [node, offset] = leaf.position(offset, true);\n    const range = document.createRange();\n    if (length > 0) {\n      range.setStart(node, offset);\n      [leaf, offset] = this.scroll.leaf(index + length);\n      if (leaf == null) return null;\n      [node, offset] = leaf.position(offset, true);\n      range.setEnd(node, offset);\n      return range.getBoundingClientRect();\n    }\n    let side: 'left' | 'right' = 'left';\n    let rect: DOMRect;\n    if (node instanceof Text) {\n      // Return null if the text node is empty because it is\n      // not able to get a useful client rect:\n      // https://github.com/w3c/csswg-drafts/issues/2514.\n      // Empty text nodes are most likely caused by TextBlot#optimize()\n      // not getting called when editor content changes.\n      if (!node.data.length) {\n        return null;\n      }\n      if (offset < node.data.length) {\n        range.setStart(node, offset);\n        range.setEnd(node, offset + 1);\n      } else {\n        range.setStart(node, offset - 1);\n        range.setEnd(node, offset);\n        side = 'right';\n      }\n      rect = range.getBoundingClientRect();\n    } else {\n      if (!(leaf.domNode instanceof Element)) return null;\n      rect = leaf.domNode.getBoundingClientRect();\n      if (offset > 0) side = 'right';\n    }\n    return {\n      bottom: rect.top + rect.height,\n      height: rect.height,\n      left: rect[side],\n      right: rect[side],\n      top: rect.top,\n      width: 0,\n    };\n  }\n\n  getNativeRange(): NormalizedRange | null {\n    const selection = document.getSelection();\n    if (selection == null || selection.rangeCount <= 0) return null;\n    const nativeRange = selection.getRangeAt(0);\n    if (nativeRange == null) return null;\n    const range = this.normalizeNative(nativeRange);\n    debug.info('getNativeRange', range);\n    return range;\n  }\n\n  getRange(): [Range, NormalizedRange] | [null, null] {\n    const root = this.scroll.domNode;\n    if ('isConnected' in root && !root.isConnected) {\n      // document.getSelection() forces layout on Blink, so we trend to\n      // not calling it.\n      return [null, null];\n    }\n    const normalized = this.getNativeRange();\n    if (normalized == null) return [null, null];\n    const range = this.normalizedToRange(normalized);\n    return [range, normalized];\n  }\n\n  hasFocus(): boolean {\n    return (\n      document.activeElement === this.root ||\n      (document.activeElement != null &&\n        contains(this.root, document.activeElement))\n    );\n  }\n\n  normalizedToRange(range: NormalizedRange) {\n    const positions: [Node, number][] = [\n      [range.start.node, range.start.offset],\n    ];\n    if (!range.native.collapsed) {\n      positions.push([range.end.node, range.end.offset]);\n    }\n    const indexes = positions.map((position) => {\n      const [node, offset] = position;\n      const blot = this.scroll.find(node, true);\n      // @ts-expect-error Fix me later\n      const index = blot.offset(this.scroll);\n      if (offset === 0) {\n        return index;\n      }\n      if (blot instanceof LeafBlot) {\n        return index + blot.index(node, offset);\n      }\n      // @ts-expect-error Fix me later\n      return index + blot.length();\n    });\n    const end = Math.min(Math.max(...indexes), this.scroll.length() - 1);\n    const start = Math.min(end, ...indexes);\n    return new Range(start, end - start);\n  }\n\n  normalizeNative(nativeRange: NativeRange) {\n    if (\n      !contains(this.root, nativeRange.startContainer) ||\n      (!nativeRange.collapsed && !contains(this.root, nativeRange.endContainer))\n    ) {\n      return null;\n    }\n    const range = {\n      start: {\n        node: nativeRange.startContainer,\n        offset: nativeRange.startOffset,\n      },\n      end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },\n      native: nativeRange,\n    };\n    [range.start, range.end].forEach((position) => {\n      let { node, offset } = position;\n      while (!(node instanceof Text) && node.childNodes.length > 0) {\n        if (node.childNodes.length > offset) {\n          node = node.childNodes[offset];\n          offset = 0;\n        } else if (node.childNodes.length === offset) {\n          // @ts-expect-error Fix me later\n          node = node.lastChild;\n          if (node instanceof Text) {\n            offset = node.data.length;\n          } else if (node.childNodes.length > 0) {\n            // Container case\n            offset = node.childNodes.length;\n          } else {\n            // Embed case\n            offset = node.childNodes.length + 1;\n          }\n        } else {\n          break;\n        }\n      }\n      position.node = node;\n      position.offset = offset;\n    });\n    return range;\n  }\n\n  rangeToNative(range: Range): [Node | null, number, Node | null, number] {\n    const scrollLength = this.scroll.length();\n\n    const getPosition = (\n      index: number,\n      inclusive: boolean,\n    ): [Node | null, number] => {\n      index = Math.min(scrollLength - 1, index);\n      const [leaf, leafOffset] = this.scroll.leaf(index);\n      return leaf ? leaf.position(leafOffset, inclusive) : [null, -1];\n    };\n    return [\n      ...getPosition(range.index, false),\n      ...getPosition(range.index + range.length, true),\n    ];\n  }\n\n  setNativeRange(\n    startNode: Node | null,\n    startOffset?: number,\n    endNode = startNode,\n    endOffset = startOffset,\n    force = false,\n  ) {\n    debug.info('setNativeRange', startNode, startOffset, endNode, endOffset);\n    if (\n      startNode != null &&\n      (this.root.parentNode == null ||\n        startNode.parentNode == null ||\n        // @ts-expect-error Fix me later\n        endNode.parentNode == null)\n    ) {\n      return;\n    }\n    const selection = document.getSelection();\n    if (selection == null) return;\n    if (startNode != null) {\n      if (!this.hasFocus()) this.root.focus({ preventScroll: true });\n      const { native } = this.getNativeRange() || {};\n      if (\n        native == null ||\n        force ||\n        startNode !== native.startContainer ||\n        startOffset !== native.startOffset ||\n        endNode !== native.endContainer ||\n        endOffset !== native.endOffset\n      ) {\n        if (startNode instanceof Element && startNode.tagName === 'BR') {\n          // @ts-expect-error Fix me later\n          startOffset = Array.from(startNode.parentNode.childNodes).indexOf(\n            startNode,\n          );\n          startNode = startNode.parentNode;\n        }\n        if (endNode instanceof Element && endNode.tagName === 'BR') {\n          // @ts-expect-error Fix me later\n          endOffset = Array.from(endNode.parentNode.childNodes).indexOf(\n            endNode,\n          );\n          endNode = endNode.parentNode;\n        }\n        const range = document.createRange();\n        // @ts-expect-error Fix me later\n        range.setStart(startNode, startOffset);\n        // @ts-expect-error Fix me later\n        range.setEnd(endNode, endOffset);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    } else {\n      selection.removeAllRanges();\n      this.root.blur();\n    }\n  }\n\n  setRange(range: Range | null, force: boolean, source?: EmitterSource): void;\n  setRange(range: Range | null, source?: EmitterSource): void;\n  setRange(\n    range: Range | null,\n    force: boolean | EmitterSource = false,\n    source: EmitterSource = Emitter.sources.API,\n  ): void {\n    if (typeof force === 'string') {\n      source = force;\n      force = false;\n    }\n    debug.info('setRange', range);\n    if (range != null) {\n      const args = this.rangeToNative(range);\n      this.setNativeRange(...args, force);\n    } else {\n      this.setNativeRange(null);\n    }\n    this.update(source);\n  }\n\n  update(source: EmitterSource = Emitter.sources.USER) {\n    const oldRange = this.lastRange;\n    const [lastRange, nativeRange] = this.getRange();\n    this.lastRange = lastRange;\n    this.lastNative = nativeRange;\n    if (this.lastRange != null) {\n      this.savedRange = this.lastRange;\n    }\n    if (!isEqual(oldRange, this.lastRange)) {\n      if (\n        !this.composing &&\n        nativeRange != null &&\n        nativeRange.native.collapsed &&\n        nativeRange.start.node !== this.cursor.textNode\n      ) {\n        const range = this.cursor.restore();\n        if (range) {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }\n      }\n      const args = [\n        Emitter.events.SELECTION_CHANGE,\n        cloneDeep(this.lastRange),\n        cloneDeep(oldRange),\n        source,\n      ];\n      this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n      if (source !== Emitter.sources.SILENT) {\n        this.emitter.emit(...args);\n      }\n    }\n  }\n}\n\nfunction contains(parent: Node, descendant: Node) {\n  try {\n    // Firefox inserts inaccessible nodes around video elements\n    descendant.parentNode; // eslint-disable-line @typescript-eslint/no-unused-expressions\n  } catch (e) {\n    return false;\n  }\n  return parent.contains(descendant);\n}\n\nexport default Selection;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,SAAA,GAAAD,OAAA;AACA,IAAAE,QAAA,GAAAC,sBAAA,CAAAH,OAAA;AAEA,IAAAI,OAAA,GAAAD,sBAAA,CAAAH,OAAA;AAIA,IAAMK,KAAK,GAAG,IAAAC,eAAM,EAAC,iBAAiB,CAAC;AAAA,IAsB1BC,KAAK,GAAAC,OAAA,CAAAD,KAAA,oBAAAE,aAAA,CAAAC,OAAA,EAChB,SAAAH,MACSI,KAAa,EAEpB;EAAA,IAAAC,gBAAA,CAAAF,OAAA,QAAAH,KAAA;EAAA,IADOM,MAAM,GAAAC,SAAA,CAAAD,MAAA,QAAAC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC;EAAA,KADVH,KAAa,GAAbA,KAAa;EAAA,KACbE,MAAM,GAANA,MAAM;AACZ;AAAA,IAGCG,SAAS;EAYb,SAAAA,UAAYC,MAAc,EAAEC,OAAgB,EAAE;IAAA,IAAAC,KAAA;IAAA,IAAAP,gBAAA,CAAAF,OAAA,QAAAM,SAAA;IAC5C,IAAI,CAACE,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACG,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACL,MAAM,CAACM,OAAO;IAC/B;IACA,IAAI,CAACC,MAAM,GAAG,IAAI,CAACP,MAAM,CAACQ,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC;IAChD;IACA,IAAI,CAACC,UAAU,GAAG,IAAInB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,CAACoB,SAAS,GAAG,IAAI,CAACD,UAAU;IAChC,IAAI,CAACE,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACZ,OAAO,CAACa,SAAS,CAAC,iBAAiB,EAAEC,QAAQ,EAAE,YAAM;MACxD,IAAI,CAACb,KAAI,CAACE,SAAS,IAAI,CAACF,KAAI,CAACC,SAAS,EAAE;QACtCa,UAAU,CAACd,KAAI,CAACe,MAAM,CAACC,IAAI,CAAChB,KAAI,EAAEiB,gBAAO,CAACC,OAAO,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;MAC7D;IACF,CAAC,CAAC;IACF,IAAI,CAACpB,OAAO,CAACqB,EAAE,CAACH,gBAAO,CAACI,MAAM,CAACC,oBAAoB,EAAE,YAAM;MACzD,IAAI,CAACtB,KAAI,CAACuB,QAAQ,CAAC,CAAC,EAAE;MACtB,IAAMC,MAAM,GAAGxB,KAAI,CAACyB,cAAc,CAAC,CAAC;MACpC,IAAID,MAAM,IAAI,IAAI,EAAE;MACpB,IAAIA,MAAM,CAACE,KAAK,CAACC,IAAI,KAAK3B,KAAI,CAACK,MAAM,CAACuB,QAAQ,EAAE,OAAO,CAAC;MACxD5B,KAAI,CAACD,OAAO,CAAC8B,IAAI,CACfZ,gBAAO,CAACI,MAAM,CAACS,aAAa,EAC5B,UAACC,MAAM,EAAEC,SAA2B,EAAK;QACvC,IAAI;UACF,IACEhC,KAAI,CAACG,IAAI,CAAC8B,QAAQ,CAACT,MAAM,CAACE,KAAK,CAACC,IAAI,CAAC,IACrC3B,KAAI,CAACG,IAAI,CAAC8B,QAAQ,CAACT,MAAM,CAACU,GAAG,CAACP,IAAI,CAAC,EACnC;YACA3B,KAAI,CAACmC,cAAc,CACjBX,MAAM,CAACE,KAAK,CAACC,IAAI,EACjBH,MAAM,CAACE,KAAK,CAACU,MAAM,EACnBZ,MAAM,CAACU,GAAG,CAACP,IAAI,EACfH,MAAM,CAACU,GAAG,CAACE,MACb,CAAC;UACH;UACA,IAAMC,iBAAiB,GAAGL,SAAS,CAACM,IAAI,CACrC,UAAAC,QAAQ;YAAA,OACPA,QAAQ,CAACC,IAAI,KAAK,eAAe,IACjCD,QAAQ,CAACC,IAAI,KAAK,WAAW,IAC5BD,QAAQ,CAACC,IAAI,KAAK,YAAY,IAC7BD,QAAQ,CAACE,MAAM,KAAKzC,KAAI,CAACG,IAC/B;UAAA,EAAC;UACDH,KAAI,CAACe,MAAM,CAACsB,iBAAiB,GAAGpB,gBAAO,CAACC,OAAO,CAACwB,MAAM,GAAGX,MAAM,CAAC;QAClE,CAAC,CAAC,OAAOY,OAAO,EAAE;UAChB;QAAA;MAEJ,CACF,CAAC;IACH,CAAC,CAAC;IACF,IAAI,CAAC5C,OAAO,CAACqB,EAAE,CAACH,gBAAO,CAACI,MAAM,CAACuB,eAAe,EAAE,UAACZ,SAAS,EAAEa,OAAO,EAAK;MACtE,IAAIA,OAAO,CAACC,KAAK,EAAE;QACjB,IAAAC,cAAA,GAAuDF,OAAO,CAACC,KAAK;UAA5DE,SAAS,GAAAD,cAAA,CAATC,SAAS;UAAEC,WAAW,GAAAF,cAAA,CAAXE,WAAW;UAAEC,OAAO,GAAAH,cAAA,CAAPG,OAAO;UAAEC,SAAA,GAAAJ,cAAA,CAAAI,SAAA;QACzCnD,KAAI,CAACmC,cAAc,CAACa,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAEC,SAAS,CAAC;QAC/DnD,KAAI,CAACe,MAAM,CAACE,gBAAO,CAACC,OAAO,CAACwB,MAAM,CAAC;MACrC;IACF,CAAC,CAAC;IACF,IAAI,CAAC3B,MAAM,CAACE,gBAAO,CAACC,OAAO,CAACwB,MAAM,CAAC;EACrC;EAAA,WAAApD,aAAA,CAAAC,OAAA,EAAAM,SAAA;IAAAuD,GAAA;IAAAC,KAAA,EAEA,SAAA3C,iBAAiBA,CAAA,EAAG;MAAA,IAAA4C,MAAA;MAClB,IAAI,CAACvD,OAAO,CAACqB,EAAE,CAACH,gBAAO,CAACI,MAAM,CAACkC,wBAAwB,EAAE,YAAM;QAC7DD,MAAI,CAACrD,SAAS,GAAG,IAAI;MACvB,CAAC,CAAC;MACF,IAAI,CAACF,OAAO,CAACqB,EAAE,CAACH,gBAAO,CAACI,MAAM,CAACmC,eAAe,EAAE,YAAM;QACpDF,MAAI,CAACrD,SAAS,GAAG,KAAK;QACtB,IAAIqD,MAAI,CAACjD,MAAM,CAACoD,MAAM,EAAE;UACtB,IAAMX,KAAK,GAAGQ,MAAI,CAACjD,MAAM,CAACqD,OAAO,CAAC,CAAC;UACnC,IAAI,CAACZ,KAAK,EAAE;UACZhC,UAAU,CAAC,YAAM;YACfwC,MAAI,CAACnB,cAAc,CACjBW,KAAK,CAACE,SAAS,EACfF,KAAK,CAACG,WAAW,EACjBH,KAAK,CAACI,OAAO,EACbJ,KAAK,CAACK,SACR,CAAC;UACH,CAAC,EAAE,CAAC,CAAC;QACP;MACF,CAAC,CAAC;IACJ;EAAA;IAAAC,GAAA;IAAAC,KAAA,EAEA,SAAA1C,cAAcA,CAAA,EAAG;MAAA,IAAAgD,MAAA;MACf,IAAI,CAAC5D,OAAO,CAACa,SAAS,CAAC,WAAW,EAAEC,QAAQ,CAAC+C,IAAI,EAAE,YAAM;QACvDD,MAAI,CAACzD,SAAS,GAAG,IAAI;MACvB,CAAC,CAAC;MACF,IAAI,CAACH,OAAO,CAACa,SAAS,CAAC,SAAS,EAAEC,QAAQ,CAAC+C,IAAI,EAAE,YAAM;QACrDD,MAAI,CAACzD,SAAS,GAAG,KAAK;QACtByD,MAAI,CAAC5C,MAAM,CAACE,gBAAO,CAACC,OAAO,CAACC,IAAI,CAAC;MACnC,CAAC,CAAC;IACJ;EAAA;IAAAiC,GAAA;IAAAC,KAAA,EAEA,SAAAQ,KAAKA,CAAA,EAAG;MACN,IAAI,IAAI,CAACtC,QAAQ,CAAC,CAAC,EAAE;MACrB,IAAI,CAACpB,IAAI,CAAC0D,KAAK,CAAC;QAAEC,aAAa,EAAE;MAAK,CAAC,CAAC;MACxC,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACxD,UAAU,CAAC;IAChC;EAAA;IAAA6C,GAAA;IAAAC,KAAA,EAEA,SAAAW,MAAMA,CAACA,OAAc,EAAEX,KAAc,EAAE;MACrC,IAAI,CAACvD,MAAM,CAACiB,MAAM,CAAC,CAAC;MACpB,IAAMkD,WAAW,GAAG,IAAI,CAACxC,cAAc,CAAC,CAAC;MACzC,IACEwC,WAAW,IAAI,IAAI,IACnB,CAACA,WAAW,CAACzC,MAAM,CAAC0C,SAAS,IAC7B,IAAI,CAACpE,MAAM,CAACqE,KAAK,CAACH,OAAM,EAAEI,gBAAK,CAACC,KAAK,CAAC,EAEtC;MACF,IAAIJ,WAAW,CAACvC,KAAK,CAACC,IAAI,KAAK,IAAI,CAACtB,MAAM,CAACuB,QAAQ,EAAE;QACnD,IAAM0C,IAAI,GAAG,IAAI,CAACxE,MAAM,CAACyE,IAAI,CAACN,WAAW,CAACvC,KAAK,CAACC,IAAI,EAAE,KAAK,CAAC;QAC5D,IAAI2C,IAAI,IAAI,IAAI,EAAE;QAClB;QACA,IAAIA,IAAI,YAAYE,mBAAQ,EAAE;UAC5B,IAAMC,KAAK,GAAGH,IAAI,CAACI,KAAK,CAACT,WAAW,CAACvC,KAAK,CAACU,MAAM,CAAC;UAClDkC,IAAI,CAACb,MAAM,CAACkB,YAAY,CAAC,IAAI,CAACtE,MAAM,EAAEoE,KAAK,CAAC;QAC9C,CAAC,MAAM;UACL;UACAH,IAAI,CAACK,YAAY,CAAC,IAAI,CAACtE,MAAM,EAAE4D,WAAW,CAACvC,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;QAC1D;QACA,IAAI,CAACtB,MAAM,CAACuE,MAAM,CAAC,CAAC;MACtB;MACA,IAAI,CAACvE,MAAM,CAAC2D,MAAM,CAACA,OAAM,EAAEX,KAAK,CAAC;MACjC,IAAI,CAACvD,MAAM,CAAC+E,QAAQ,CAAC,CAAC;MACtB,IAAI,CAAC1C,cAAc,CAAC,IAAI,CAAC9B,MAAM,CAACuB,QAAQ,EAAE,IAAI,CAACvB,MAAM,CAACuB,QAAQ,CAACkD,IAAI,CAACpF,MAAM,CAAC;MAC3E,IAAI,CAACqB,MAAM,CAAC,CAAC;IACf;EAAA;IAAAqC,GAAA;IAAAC,KAAA,EAEA,SAAA0B,SAASA,CAACvF,KAAa,EAAc;MAAA,IAAZE,MAAM,GAAAC,SAAA,CAAAD,MAAA,QAAAC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC;MACjC,IAAMqF,YAAY,GAAG,IAAI,CAAClF,MAAM,CAACJ,MAAM,CAAC,CAAC;MACzCF,KAAK,GAAGyF,IAAI,CAACC,GAAG,CAAC1F,KAAK,EAAEwF,YAAY,GAAG,CAAC,CAAC;MACzCtF,MAAM,GAAGuF,IAAI,CAACC,GAAG,CAAC1F,KAAK,GAAGE,MAAM,EAAEsF,YAAY,GAAG,CAAC,CAAC,GAAGxF,KAAK;MAC3D,IAAImC,IAAU;MACd,IAAAwD,iBAAA,GAAqB,IAAI,CAACrF,MAAM,CAACsF,IAAI,CAAC5F,KAAK,CAAC;QAAA6F,kBAAA,OAAAC,eAAA,CAAA/F,OAAA,EAAA4F,iBAAA;QAAvCC,IAAI,GAAAC,kBAAA;QAAEjD,MAAM,GAAAiD,kBAAA;MACjB,IAAID,IAAI,IAAI,IAAI,EAAE,OAAO,IAAI;MAC7B,IAAI1F,MAAM,GAAG,CAAC,IAAI0C,MAAM,KAAKgD,IAAI,CAAC1F,MAAM,CAAC,CAAC,EAAE;QAC1C,IAAA6F,kBAAA,GAAe,IAAI,CAACzF,MAAM,CAACsF,IAAI,CAAC5F,KAAK,GAAG,CAAC,CAAC;UAAAgG,kBAAA,OAAAF,eAAA,CAAA/F,OAAA,EAAAgG,kBAAA;UAAnCE,IAAI,GAAAD,kBAAA;QACX,IAAIC,IAAI,EAAE;UACR,IAAAC,iBAAA,GAAe,IAAI,CAAC5F,MAAM,CAAC6F,IAAI,CAACnG,KAAK,CAAC;YAAAoG,kBAAA,OAAAN,eAAA,CAAA/F,OAAA,EAAAmG,iBAAA;YAA/BC,IAAI,GAAAC,kBAAA;UACX,IAAAC,kBAAA,GAAmB,IAAI,CAAC/F,MAAM,CAAC6F,IAAI,CAACnG,KAAK,GAAG,CAAC,CAAC;YAAAsG,kBAAA,OAAAR,eAAA,CAAA/F,OAAA,EAAAsG,kBAAA;YAAvCE,QAAQ,GAAAD,kBAAA;UACf,IAAIH,IAAI,KAAKI,QAAQ,EAAE;YACrBX,IAAI,GAAGK,IAAI;YACXrD,MAAM,GAAG,CAAC;UACZ;QACF;MACF;MAAA,IAAA4D,cAAA,GACiBZ,IAAI,CAACa,QAAQ,CAAC7D,MAAM,EAAE,IAAI,CAAC;MAAA,IAAA8D,eAAA,OAAAZ,eAAA,CAAA/F,OAAA,EAAAyG,cAAA;MAA3CrE,IAAI,GAAAuE,eAAA;MAAE9D,MAAM,GAAA8D,eAAA;MACb,IAAMpD,KAAK,GAAGjC,QAAQ,CAACsF,WAAW,CAAC,CAAC;MACpC,IAAIzG,MAAM,GAAG,CAAC,EAAE;QACdoD,KAAK,CAACsD,QAAQ,CAACzE,IAAI,EAAES,MAAM,CAAC;QAAA,IAAAiE,kBAAA,GACX,IAAI,CAACvG,MAAM,CAACsF,IAAI,CAAC5F,KAAK,GAAGE,MAAM,CAAC;QAAA,IAAA4G,kBAAA,OAAAhB,eAAA,CAAA/F,OAAA,EAAA8G,kBAAA;QAAhDjB,IAAI,GAAAkB,kBAAA;QAAElE,MAAM,GAAAkE,kBAAA;QACb,IAAIlB,IAAI,IAAI,IAAI,EAAE,OAAO,IAAI;QAAA,IAAAmB,eAAA,GACZnB,IAAI,CAACa,QAAQ,CAAC7D,MAAM,EAAE,IAAI,CAAC;QAAA,IAAAoE,eAAA,OAAAlB,eAAA,CAAA/F,OAAA,EAAAgH,eAAA;QAA3C5E,IAAI,GAAA6E,eAAA;QAAEpE,MAAM,GAAAoE,eAAA;QACb1D,KAAK,CAAC2D,MAAM,CAAC9E,IAAI,EAAES,MAAM,CAAC;QAC1B,OAAOU,KAAK,CAAC4D,qBAAqB,CAAC,CAAC;MACtC;MACA,IAAIC,IAAsB,GAAG,MAAM;MACnC,IAAIC,IAAa;MACjB,IAAIjF,IAAI,YAAYkF,IAAI,EAAE;QACxB;QACA;QACA;QACA;QACA;QACA,IAAI,CAAClF,IAAI,CAACmD,IAAI,CAACpF,MAAM,EAAE;UACrB,OAAO,IAAI;QACb;QACA,IAAI0C,MAAM,GAAGT,IAAI,CAACmD,IAAI,CAACpF,MAAM,EAAE;UAC7BoD,KAAK,CAACsD,QAAQ,CAACzE,IAAI,EAAES,MAAM,CAAC;UAC5BU,KAAK,CAAC2D,MAAM,CAAC9E,IAAI,EAAES,MAAM,GAAG,CAAC,CAAC;QAChC,CAAC,MAAM;UACLU,KAAK,CAACsD,QAAQ,CAACzE,IAAI,EAAES,MAAM,GAAG,CAAC,CAAC;UAChCU,KAAK,CAAC2D,MAAM,CAAC9E,IAAI,EAAES,MAAM,CAAC;UAC1BuE,IAAI,GAAG,OAAO;QAChB;QACAC,IAAI,GAAG9D,KAAK,CAAC4D,qBAAqB,CAAC,CAAC;MACtC,CAAC,MAAM;QACL,IAAI,EAAEtB,IAAI,CAAChF,OAAO,YAAY0G,OAAO,CAAC,EAAE,OAAO,IAAI;QACnDF,IAAI,GAAGxB,IAAI,CAAChF,OAAO,CAACsG,qBAAqB,CAAC,CAAC;QAC3C,IAAItE,MAAM,GAAG,CAAC,EAAEuE,IAAI,GAAG,OAAO;MAChC;MACA,OAAO;QACLI,MAAM,EAAEH,IAAI,CAACI,GAAG,GAAGJ,IAAI,CAACK,MAAM;QAC9BA,MAAM,EAAEL,IAAI,CAACK,MAAM;QACnBC,IAAI,EAAEN,IAAI,CAACD,IAAI,CAAC;QAChBQ,KAAK,EAAEP,IAAI,CAACD,IAAI,CAAC;QACjBK,GAAG,EAAEJ,IAAI,CAACI,GAAG;QACbI,KAAK,EAAE;MACT,CAAC;IACH;EAAA;IAAAhE,GAAA;IAAAC,KAAA,EAEA,SAAA5B,cAAcA,CAAA,EAA2B;MACvC,IAAM4F,SAAS,GAAGxG,QAAQ,CAACyG,YAAY,CAAC,CAAC;MACzC,IAAID,SAAS,IAAI,IAAI,IAAIA,SAAS,CAACE,UAAU,IAAI,CAAC,EAAE,OAAO,IAAI;MAC/D,IAAMtD,WAAW,GAAGoD,SAAS,CAACG,UAAU,CAAC,CAAC,CAAC;MAC3C,IAAIvD,WAAW,IAAI,IAAI,EAAE,OAAO,IAAI;MACpC,IAAMnB,KAAK,GAAG,IAAI,CAAC2E,eAAe,CAACxD,WAAW,CAAC;MAC/C/E,KAAK,CAACwI,IAAI,CAAC,gBAAgB,EAAE5E,KAAK,CAAC;MACnC,OAAOA,KAAK;IACd;EAAA;IAAAM,GAAA;IAAAC,KAAA,EAEA,SAAAsE,QAAQA,CAAA,EAA4C;MAClD,IAAMxH,IAAI,GAAG,IAAI,CAACL,MAAM,CAACM,OAAO;MAChC,IAAI,aAAa,IAAID,IAAI,IAAI,CAACA,IAAI,CAACyH,WAAW,EAAE;QAC9C;QACA;QACA,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;MACrB;MACA,IAAMC,UAAU,GAAG,IAAI,CAACpG,cAAc,CAAC,CAAC;MACxC,IAAIoG,UAAU,IAAI,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;MAC3C,IAAM/E,KAAK,GAAG,IAAI,CAACgF,iBAAiB,CAACD,UAAU,CAAC;MAChD,OAAO,CAAC/E,KAAK,EAAE+E,UAAU,CAAC;IAC5B;EAAA;IAAAzE,GAAA;IAAAC,KAAA,EAEA,SAAA9B,QAAQA,CAAA,EAAY;MAClB,OACEV,QAAQ,CAACkH,aAAa,KAAK,IAAI,CAAC5H,IAAI,IACnCU,QAAQ,CAACkH,aAAa,IAAI,IAAI,IAC7B9F,QAAQ,CAAC,IAAI,CAAC9B,IAAI,EAAEU,QAAQ,CAACkH,aAAa,CAAE;IAElD;EAAA;IAAA3E,GAAA;IAAAC,KAAA,EAEA,SAAAyE,iBAAiBA,CAAChF,KAAsB,EAAE;MAAA,IAAAkF,MAAA;MACxC,IAAMC,SAA2B,GAAG,CAClC,CAACnF,KAAK,CAACpB,KAAK,CAACC,IAAI,EAAEmB,KAAK,CAACpB,KAAK,CAACU,MAAM,CAAC,CACvC;MACD,IAAI,CAACU,KAAK,CAACtB,MAAM,CAAC0C,SAAS,EAAE;QAC3B+D,SAAS,CAACC,IAAI,CAAC,CAACpF,KAAK,CAACZ,GAAG,CAACP,IAAI,EAAEmB,KAAK,CAACZ,GAAG,CAACE,MAAM,CAAC,CAAC;MACpD;MACA,IAAM+F,OAAO,GAAGF,SAAS,CAACG,GAAG,CAAE,UAAAnC,QAAQ,EAAK;QAC1C,IAAAoC,SAAA,OAAA/C,eAAA,CAAA/F,OAAA,EAAuB0G,QAAQ;UAAxBtE,IAAI,GAAA0G,SAAA;UAAEjG,MAAM,GAAAiG,SAAA;QACnB,IAAM/D,IAAI,GAAG0D,MAAI,CAAClI,MAAM,CAACyE,IAAI,CAAC5C,IAAI,EAAE,IAAI,CAAC;QACzC;QACA,IAAMnC,KAAK,GAAG8E,IAAI,CAAClC,MAAM,CAAC4F,MAAI,CAAClI,MAAM,CAAC;QACtC,IAAIsC,MAAM,KAAK,CAAC,EAAE;UAChB,OAAO5C,KAAK;QACd;QACA,IAAI8E,IAAI,YAAYE,mBAAQ,EAAE;UAC5B,OAAOhF,KAAK,GAAG8E,IAAI,CAAC9E,KAAK,CAACmC,IAAI,EAAES,MAAM,CAAC;QACzC;QACA;QACA,OAAO5C,KAAK,GAAG8E,IAAI,CAAC5E,MAAM,CAAC,CAAC;MAC9B,CAAC,CAAC;MACF,IAAMwC,GAAG,GAAG+C,IAAI,CAACC,GAAG,CAACD,IAAI,CAACqD,GAAG,CAAAC,KAAA,CAARtD,IAAI,MAAAuD,mBAAA,CAAAjJ,OAAA,EAAQ4I,OAAO,EAAC,EAAE,IAAI,CAACrI,MAAM,CAACJ,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;MACpE,IAAMgC,KAAK,GAAGuD,IAAI,CAACC,GAAG,CAAAqD,KAAA,CAARtD,IAAI,GAAK/C,GAAG,EAAAuG,MAAA,KAAAD,mBAAA,CAAAjJ,OAAA,EAAK4I,OAAO,GAAC;MACvC,OAAO,IAAI/I,KAAK,CAACsC,KAAK,EAAEQ,GAAG,GAAGR,KAAK,CAAC;IACtC;EAAA;IAAA0B,GAAA;IAAAC,KAAA,EAEA,SAAAoE,eAAeA,CAACxD,WAAwB,EAAE;MACxC,IACE,CAAChC,QAAQ,CAAC,IAAI,CAAC9B,IAAI,EAAE8D,WAAW,CAACyE,cAAc,CAAC,IAC/C,CAACzE,WAAW,CAACC,SAAS,IAAI,CAACjC,QAAQ,CAAC,IAAI,CAAC9B,IAAI,EAAE8D,WAAW,CAAC0E,YAAY,CAAE,EAC1E;QACA,OAAO,IAAI;MACb;MACA,IAAM7F,KAAK,GAAG;QACZpB,KAAK,EAAE;UACLC,IAAI,EAAEsC,WAAW,CAACyE,cAAc;UAChCtG,MAAM,EAAE6B,WAAW,CAAChB;QACtB,CAAC;QACDf,GAAG,EAAE;UAAEP,IAAI,EAAEsC,WAAW,CAAC0E,YAAY;UAAEvG,MAAM,EAAE6B,WAAW,CAACd;QAAU,CAAC;QACtE3B,MAAM,EAAEyC;MACV,CAAC;MACD,CAACnB,KAAK,CAACpB,KAAK,EAAEoB,KAAK,CAACZ,GAAG,CAAC,CAAC0G,OAAO,CAAE,UAAA3C,QAAQ,EAAK;QAC7C,IAAMtE,IAAI,GAAasE,QAAQ,CAAzBtE,IAAI;UAAES,MAAA,GAAW6D,QAAQ,CAAnB7D,MAAA;QACZ,OAAO,EAAET,IAAI,YAAYkF,IAAI,CAAC,IAAIlF,IAAI,CAACkH,UAAU,CAACnJ,MAAM,GAAG,CAAC,EAAE;UAC5D,IAAIiC,IAAI,CAACkH,UAAU,CAACnJ,MAAM,GAAG0C,MAAM,EAAE;YACnCT,IAAI,GAAGA,IAAI,CAACkH,UAAU,CAACzG,MAAM,CAAC;YAC9BA,MAAM,GAAG,CAAC;UACZ,CAAC,MAAM,IAAIT,IAAI,CAACkH,UAAU,CAACnJ,MAAM,KAAK0C,MAAM,EAAE;YAC5C;YACAT,IAAI,GAAGA,IAAI,CAACmH,SAAS;YACrB,IAAInH,IAAI,YAAYkF,IAAI,EAAE;cACxBzE,MAAM,GAAGT,IAAI,CAACmD,IAAI,CAACpF,MAAM;YAC3B,CAAC,MAAM,IAAIiC,IAAI,CAACkH,UAAU,CAACnJ,MAAM,GAAG,CAAC,EAAE;cACrC;cACA0C,MAAM,GAAGT,IAAI,CAACkH,UAAU,CAACnJ,MAAM;YACjC,CAAC,MAAM;cACL;cACA0C,MAAM,GAAGT,IAAI,CAACkH,UAAU,CAACnJ,MAAM,GAAG,CAAC;YACrC;UACF,CAAC,MAAM;YACL;UACF;QACF;QACAuG,QAAQ,CAACtE,IAAI,GAAGA,IAAI;QACpBsE,QAAQ,CAAC7D,MAAM,GAAGA,MAAM;MAC1B,CAAC,CAAC;MACF,OAAOU,KAAK;IACd;EAAA;IAAAM,GAAA;IAAAC,KAAA,EAEA,SAAA0F,aAAaA,CAACjG,KAAY,EAA8C;MAAA,IAAAkG,MAAA;MACtE,IAAMhE,YAAY,GAAG,IAAI,CAAClF,MAAM,CAACJ,MAAM,CAAC,CAAC;MAEzC,IAAMuJ,WAAW,GAAG,SAAdA,WAAWA,CACfzJ,KAAa,EACb0J,SAAkB,EACQ;QAC1B1J,KAAK,GAAGyF,IAAI,CAACC,GAAG,CAACF,YAAY,GAAG,CAAC,EAAExF,KAAK,CAAC;QACzC,IAAA2J,kBAAA,GAA2BH,MAAI,CAAClJ,MAAM,CAACsF,IAAI,CAAC5F,KAAK,CAAC;UAAA4J,mBAAA,OAAA9D,eAAA,CAAA/F,OAAA,EAAA4J,kBAAA;UAA3C/D,IAAI,GAAAgE,mBAAA;UAAEC,UAAU,GAAAD,mBAAA;QACvB,OAAOhE,IAAI,GAAGA,IAAI,CAACa,QAAQ,CAACoD,UAAU,EAAEH,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;MACjE,CAAC;MACD,UAAAT,MAAA,KAAAD,mBAAA,CAAAjJ,OAAA,EACK0J,WAAW,CAACnG,KAAK,CAACtD,KAAK,EAAE,KAAK,CAAC,OAAAgJ,mBAAA,CAAAjJ,OAAA,EAC/B0J,WAAW,CAACnG,KAAK,CAACtD,KAAK,GAAGsD,KAAK,CAACpD,MAAM,EAAE,IAAI,CAAC;IAEpD;EAAA;IAAA0D,GAAA;IAAAC,KAAA,EAEA,SAAAlB,cAAcA,CACZa,SAAsB,EACtBC,WAAoB,EAIpB;MAAA,IAHAC,OAAO,GAAAvD,SAAA,CAAAD,MAAA,QAAAC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAGqD,SAAS;MAAA,IACnBG,SAAS,GAAAxD,SAAA,CAAAD,MAAA,QAAAC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAGsD,WAAW;MAAA,IACvBqG,KAAK,GAAA3J,SAAA,CAAAD,MAAA,QAAAC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,KAAK;MAEbT,KAAK,CAACwI,IAAI,CAAC,gBAAgB,EAAE1E,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAEC,SAAS,CAAC;MACxE,IACEH,SAAS,IAAI,IAAI,KAChB,IAAI,CAAC7C,IAAI,CAACoJ,UAAU,IAAI,IAAI,IAC3BvG,SAAS,CAACuG,UAAU,IAAI,IAAI;MAC5B;MACArG,OAAO,CAACqG,UAAU,IAAI,IAAI,CAAC,EAC7B;QACA;MACF;MACA,IAAMlC,SAAS,GAAGxG,QAAQ,CAACyG,YAAY,CAAC,CAAC;MACzC,IAAID,SAAS,IAAI,IAAI,EAAE;MACvB,IAAIrE,SAAS,IAAI,IAAI,EAAE;QACrB,IAAI,CAAC,IAAI,CAACzB,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACpB,IAAI,CAAC0D,KAAK,CAAC;UAAEC,aAAa,EAAE;QAAK,CAAC,CAAC;QAC9D,IAAA0F,IAAA,GAAmB,IAAI,CAAC/H,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC;UAAtCD,MAAA,GAAAgI,IAAA,CAAAhI,MAAA;QACR,IACEA,MAAM,IAAI,IAAI,IACd8H,KAAK,IACLtG,SAAS,KAAKxB,MAAM,CAACkH,cAAc,IACnCzF,WAAW,KAAKzB,MAAM,CAACyB,WAAW,IAClCC,OAAO,KAAK1B,MAAM,CAACmH,YAAY,IAC/BxF,SAAS,KAAK3B,MAAM,CAAC2B,SAAS,EAC9B;UACA,IAAIH,SAAS,YAAY8D,OAAO,IAAI9D,SAAS,CAACyG,OAAO,KAAK,IAAI,EAAE;YAC9D;YACAxG,WAAW,GAAGyG,KAAK,CAACC,IAAI,CAAC3G,SAAS,CAACuG,UAAU,CAACV,UAAU,CAAC,CAACe,OAAO,CAC/D5G,SACF,CAAC;YACDA,SAAS,GAAGA,SAAS,CAACuG,UAAU;UAClC;UACA,IAAIrG,OAAO,YAAY4D,OAAO,IAAI5D,OAAO,CAACuG,OAAO,KAAK,IAAI,EAAE;YAC1D;YACAtG,SAAS,GAAGuG,KAAK,CAACC,IAAI,CAACzG,OAAO,CAACqG,UAAU,CAACV,UAAU,CAAC,CAACe,OAAO,CAC3D1G,OACF,CAAC;YACDA,OAAO,GAAGA,OAAO,CAACqG,UAAU;UAC9B;UACA,IAAMzG,KAAK,GAAGjC,QAAQ,CAACsF,WAAW,CAAC,CAAC;UACpC;UACArD,KAAK,CAACsD,QAAQ,CAACpD,SAAS,EAAEC,WAAW,CAAC;UACtC;UACAH,KAAK,CAAC2D,MAAM,CAACvD,OAAO,EAAEC,SAAS,CAAC;UAChCkE,SAAS,CAACwC,eAAe,CAAC,CAAC;UAC3BxC,SAAS,CAACyC,QAAQ,CAAChH,KAAK,CAAC;QAC3B;MACF,CAAC,MAAM;QACLuE,SAAS,CAACwC,eAAe,CAAC,CAAC;QAC3B,IAAI,CAAC1J,IAAI,CAAC4J,IAAI,CAAC,CAAC;MAClB;IACF;EAAA;IAAA3G,GAAA;IAAAC,KAAA,EAIA,SAAAU,QAAQA,CACNjB,KAAmB,EAGb;MAAA,IAFNwG,KAA8B,GAAA3J,SAAA,CAAAD,MAAA,QAAAC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,KAAK;MAAA,IACtCoC,MAAqB,GAAApC,SAAA,CAAAD,MAAA,QAAAC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAGsB,gBAAO,CAACC,OAAO,CAAC8I,GAAG;MAE3C,IAAI,OAAOV,KAAK,KAAK,QAAQ,EAAE;QAC7BvH,MAAM,GAAGuH,KAAK;QACdA,KAAK,GAAG,KAAK;MACf;MACApK,KAAK,CAACwI,IAAI,CAAC,UAAU,EAAE5E,KAAK,CAAC;MAC7B,IAAIA,KAAK,IAAI,IAAI,EAAE;QACjB,IAAMmH,IAAI,GAAG,IAAI,CAAClB,aAAa,CAACjG,KAAK,CAAC;QACtC,IAAI,CAACX,cAAc,CAAAoG,KAAA,CAAnB,IAAI,MAAAC,mBAAA,CAAAjJ,OAAA,EAAmB0K,IAAI,EAAAxB,MAAA,EAAEa,KAAK,GAAC;MACrC,CAAC,MAAM;QACL,IAAI,CAACnH,cAAc,CAAC,IAAI,CAAC;MAC3B;MACA,IAAI,CAACpB,MAAM,CAACgB,MAAM,CAAC;IACrB;EAAA;IAAAqB,GAAA;IAAAC,KAAA,EAEA,SAAAtC,MAAMA,CAAA,EAA+C;MAAA,IAA9CgB,MAAqB,GAAApC,SAAA,CAAAD,MAAA,QAAAC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAGsB,gBAAO,CAACC,OAAO,CAACC,IAAI;MACjD,IAAM+I,QAAQ,GAAG,IAAI,CAAC1J,SAAS;MAC/B,IAAA2J,cAAA,GAAiC,IAAI,CAACxC,QAAQ,CAAC,CAAC;QAAAyC,eAAA,OAAA9E,eAAA,CAAA/F,OAAA,EAAA4K,cAAA;QAAzC3J,SAAS,GAAA4J,eAAA;QAAEnG,WAAW,GAAAmG,eAAA;MAC7B,IAAI,CAAC5J,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACC,UAAU,GAAGwD,WAAW;MAC7B,IAAI,IAAI,CAACzD,SAAS,IAAI,IAAI,EAAE;QAC1B,IAAI,CAACD,UAAU,GAAG,IAAI,CAACC,SAAS;MAClC;MACA,IAAI,CAAC,IAAA6J,iBAAO,EAACH,QAAQ,EAAE,IAAI,CAAC1J,SAAS,CAAC,EAAE;QAAA,IAAA8J,aAAA;QACtC,IACE,CAAC,IAAI,CAACrK,SAAS,IACfgE,WAAW,IAAI,IAAI,IACnBA,WAAW,CAACzC,MAAM,CAAC0C,SAAS,IAC5BD,WAAW,CAACvC,KAAK,CAACC,IAAI,KAAK,IAAI,CAACtB,MAAM,CAACuB,QAAQ,EAC/C;UACA,IAAMkB,KAAK,GAAG,IAAI,CAACzC,MAAM,CAACqD,OAAO,CAAC,CAAC;UACnC,IAAIZ,KAAK,EAAE;YACT,IAAI,CAACX,cAAc,CACjBW,KAAK,CAACE,SAAS,EACfF,KAAK,CAACG,WAAW,EACjBH,KAAK,CAACI,OAAO,EACbJ,KAAK,CAACK,SACR,CAAC;UACH;QACF;QACA,IAAM8G,IAAI,GAAG,CACXhJ,gBAAO,CAACI,MAAM,CAACkJ,gBAAgB,EAC/B,IAAAC,mBAAS,EAAC,IAAI,CAAChK,SAAS,CAAC,EACzB,IAAAgK,mBAAS,EAACN,QAAQ,CAAC,EACnBnI,MAAM,CACP;QACD,CAAAuI,aAAA,OAAI,CAACvK,OAAO,EAAC0K,IAAI,CAAAlC,KAAA,CAAA+B,aAAA,GAACrJ,gBAAO,CAACI,MAAM,CAACqJ,aAAa,EAAAjC,MAAA,CAAKwB,IAAI,EAAC;QACxD,IAAIlI,MAAM,KAAKd,gBAAO,CAACC,OAAO,CAACwB,MAAM,EAAE;UAAA,IAAAiI,cAAA;UACrC,CAAAA,cAAA,OAAI,CAAC5K,OAAO,EAAC0K,IAAI,CAAAlC,KAAA,CAAAoC,cAAA,EAAIV,IAAI,CAAC;QAC5B;MACF;IACF;EAAA;AAAA;AAGF,SAAShI,QAAQA,CAACwB,MAAY,EAAEmH,UAAgB,EAAE;EAChD,IAAI;IACF;IACAA,UAAU,CAACrB,UAAU,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOsB,CAAC,EAAE;IACV,OAAO,KAAK;EACd;EACA,OAAOpH,MAAM,CAACxB,QAAQ,CAAC2I,UAAU,CAAC;AACpC;AAAA,IAAAE,QAAA,GAAAzL,OAAA,CAAAE,OAAA,GAEeM,SAAS","ignoreList":[]}]}
{"remainingRequest":"E:\\workSpace\\RuoYi-Vue\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\workSpace\\RuoYi-Vue\\ruoyi-ui\\node_modules\\quill\\modules\\table.js","dependencies":[{"path":"E:\\workSpace\\RuoYi-Vue\\ruoyi-ui\\node_modules\\quill\\modules\\table.js","mtime":1734253479768},{"path":"E:\\workSpace\\RuoYi-Vue\\ruoyi-ui\\babel.config.js","mtime":1734161096606},{"path":"E:\\workSpace\\RuoYi-Vue\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734253476057},{"path":"E:\\workSpace\\RuoYi-Vue\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1734253476301}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_quillDelta","_interopRequireDefault","require","_quill","_module","_table","Table","_Module","_this","_classCallCheck2","default","_callSuper2","arguments","listenBalanceCells","_inherits2","_createClass2","key","value","balanceTables","quill","scroll","descendants","TableContainer","forEach","table","balanceCells","deleteColumn","_this$getTable","getTable","_this$getTable2","_slicedToArray2","cell","cellOffset","update","Quill","sources","USER","deleteRow","_this$getTable3","_this$getTable4","row","remove","deleteTable","_this$getTable5","_this$getTable6","offset","setSelection","SILENT","range","length","undefined","getSelection","_this$quill$getLine","getLine","index","_this$quill$getLine2","statics","blotName","TableCell","parent","insertColumn","_this$getTable7","_this$getTable8","column","shift","rowOffset","insertColumnLeft","insertColumnRight","insertRow","_this$getTable9","_this$getTable10","children","insertRowAbove","insertRowBelow","insertTable","rows","columns","delta","Array","fill","reduce","memo","text","join","insert","tableId","Delta","retain","updateContents","_this2","on","events","SCROLL_OPTIMIZE","mutations","some","mutation","includes","target","tagName","once","TEXT_CHANGE","old","source","register","TableRow","TableBody","Module","_default","exports"],"sources":["../../src/modules/table.ts"],"sourcesContent":["import Delta from 'quill-delta';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport {\n  TableCell,\n  TableRow,\n  TableBody,\n  TableContainer,\n  tableId,\n} from '../formats/table.js';\n\nclass Table extends Module {\n  static register() {\n    Quill.register(TableCell);\n    Quill.register(TableRow);\n    Quill.register(TableBody);\n    Quill.register(TableContainer);\n  }\n\n  constructor(...args: ConstructorParameters<typeof Module>) {\n    super(...args);\n    this.listenBalanceCells();\n  }\n\n  balanceTables() {\n    this.quill.scroll.descendants(TableContainer).forEach((table) => {\n      table.balanceCells();\n    });\n  }\n\n  deleteColumn() {\n    const [table, , cell] = this.getTable();\n    if (cell == null) return;\n    // @ts-expect-error\n    table.deleteColumn(cell.cellOffset());\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteRow() {\n    const [, row] = this.getTable();\n    if (row == null) return;\n    row.remove();\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteTable() {\n    const [table] = this.getTable();\n    if (table == null) return;\n    // @ts-expect-error\n    const offset = table.offset();\n    // @ts-expect-error\n    table.remove();\n    this.quill.update(Quill.sources.USER);\n    this.quill.setSelection(offset, Quill.sources.SILENT);\n  }\n\n  getTable(\n    range = this.quill.getSelection(),\n  ): [null, null, null, -1] | [Table, TableRow, TableCell, number] {\n    if (range == null) return [null, null, null, -1];\n    const [cell, offset] = this.quill.getLine(range.index);\n    if (cell == null || cell.statics.blotName !== TableCell.blotName) {\n      return [null, null, null, -1];\n    }\n    const row = cell.parent;\n    const table = row.parent.parent;\n    // @ts-expect-error\n    return [table, row, cell, offset];\n  }\n\n  insertColumn(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const column = cell.cellOffset();\n    table.insertColumn(column + offset);\n    this.quill.update(Quill.sources.USER);\n    let shift = row.rowOffset();\n    if (offset === 0) {\n      shift += 1;\n    }\n    this.quill.setSelection(\n      range.index + shift,\n      range.length,\n      Quill.sources.SILENT,\n    );\n  }\n\n  insertColumnLeft() {\n    this.insertColumn(0);\n  }\n\n  insertColumnRight() {\n    this.insertColumn(1);\n  }\n\n  insertRow(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const index = row.rowOffset();\n    table.insertRow(index + offset);\n    this.quill.update(Quill.sources.USER);\n    if (offset > 0) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    } else {\n      this.quill.setSelection(\n        range.index + row.children.length,\n        range.length,\n        Quill.sources.SILENT,\n      );\n    }\n  }\n\n  insertRowAbove() {\n    this.insertRow(0);\n  }\n\n  insertRowBelow() {\n    this.insertRow(1);\n  }\n\n  insertTable(rows: number, columns: number) {\n    const range = this.quill.getSelection();\n    if (range == null) return;\n    const delta = new Array(rows).fill(0).reduce((memo) => {\n      const text = new Array(columns).fill('\\n').join('');\n      return memo.insert(text, { table: tableId() });\n    }, new Delta().retain(range.index));\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index, Quill.sources.SILENT);\n    this.balanceTables();\n  }\n\n  listenBalanceCells() {\n    this.quill.on(\n      Quill.events.SCROLL_OPTIMIZE,\n      (mutations: MutationRecord[]) => {\n        mutations.some((mutation) => {\n          if (\n            ['TD', 'TR', 'TBODY', 'TABLE'].includes(\n              (mutation.target as HTMLElement).tagName,\n            )\n          ) {\n            this.quill.once(Quill.events.TEXT_CHANGE, (delta, old, source) => {\n              if (source !== Quill.sources.USER) return;\n              this.balanceTables();\n            });\n            return true;\n          }\n          return false;\n        });\n      },\n    );\n  }\n}\n\nexport default Table;\n"],"mappings":"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","ignoreList":[]}]}